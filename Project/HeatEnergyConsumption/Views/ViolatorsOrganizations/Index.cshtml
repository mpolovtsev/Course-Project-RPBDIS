@using HeatEnergyConsumption.Extensions
@model HeatEnergyConsumption.ViewModels.ViolatorsOrganizationsViewModel

@{
    ViewData["Title"] = "Организации-нарушители норм потребления";
}

<div class="limiter-table">
    <div class="container-title">
        <h1>@ViewData["Title"]</h1>
    </div>

    <div class="container-table">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.OrganizationOrder">@Html.DisplayNameFor(model => model.ViolatorsOrganizations.FirstOrDefault().Organization)</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.ProductTypeOrder">@Html.DisplayNameFor(model => model.ViolatorsOrganizations.FirstOrDefault().ProductType)</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.DifferenceOrder">@Html.DisplayNameFor(model => model.ViolatorsOrganizations.FirstOrDefault().Difference)</a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ViolatorsOrganizations.FirstOrDefault().Quarter)
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.YearOrder">@Html.DisplayNameFor(model => model.ViolatorsOrganizations.FirstOrDefault().Year)</a>
                    </th>
                    <th class="width-200">ОПЕРАЦИИ</th>
                </tr>
            </thead>
            <thead>
                <tr>
                    @using (Html.BeginForm("Index", "ViolatorsOrganizations", FormMethod.Post))
                    {
                        <th>
                            @Html.TextBox("Organization", Model.FilterViewModel.Organization, new { @class = "search-input", @autocomplete = "off" })
                        </th>
                        <th>
                            @Html.TextBox("ProductType", Model.FilterViewModel.ProductType, new { @class = "search-input", @autocomplete = "off" })
                        </th>
                        <th>
                            @Html.TextBox("Difference", Model.FilterViewModel.Difference, new { @class = "search-input", @autocomplete = "off" })
                        </th>
                        <th>
                            @Html.TextBox("Quarter", Model.FilterViewModel.Quarter, new { @class = "search-input", @autocomplete = "off" })
                        </th>
                        <th>
                            @Html.TextBox("Year", Model.FilterViewModel.Year, new { @class = "search-input", @autocomplete = "off" })
                        </th>
                        <th>
                            <input class="search-btn" type="submit" value="Поиск" />
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ViolatorsOrganizations)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Organization)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Difference)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quarter)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Year)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>

@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       asp-route-sortOrder="@Model.SortViewModel.CurrentOrder"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       asp-route-sortOrder="@Model.SortViewModel.CurrentOrder"
       class="btn btn-outline-dark">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}